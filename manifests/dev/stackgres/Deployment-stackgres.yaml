apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stackgres
    group: stackgres.io
    version: 1.17.2
  name: stackgres
  namespace: stackgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stackgres
      group: stackgres.io
  template:
    metadata:
      labels:
        app: stackgres
        group: stackgres.io
    spec:
      containers:
        - env:
            - name: OPERATOR_NAME
              value: stackgres
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: OPERATOR_IMAGE_VERSION
              value: 1.17.2
            - name: OPERATOR_JVM_IMAGE_VERSION
              value: 1.17.2-jvm
            - name: OPERATOR_NATIVE_IMAGE_VERSION
              value: 1.17.2
            - name: DISABLE_RECONCILIATION
              value: "false"
            - name: INSTALL_CONFIG
              value: "true"
            - name: SGCONFIG
              value: |
                apiVersion: stackgres.io/v1
                kind: SGConfig
                metadata:
                  name: stackgres
                  namespace: stackgres
                spec: {"adminui":{"image":{"name":"stackgres/admin-ui","pullPolicy":"IfNotPresent","tag":"1.17.2"},"resources":{},"service":{"exposeHTTP":false,"loadBalancerIP":null,"loadBalancerSourceRanges":null,"nodePort":null,"nodePortHTTP":null,"type":"ClusterIP"}},"allowImpersonationForRestApi":null,"allowedNamespaceLabelSelector":null,"allowedNamespaces":[],"authentication":{"createAdminSecret":true,"oidc":null,"password":null,"type":"jwt","user":"admin"},"cert":{"autoapprove":true,"certDuration":730,"certManager":{"autoConfigure":false,"duration":"2160h","encoding":"PKCS1","renewBefore":"360h","size":2048},"createForCollector":true,"createForOperator":true,"createForWebApi":true,"crt":null,"jwtRsaKey":null,"jwtRsaPub":null,"key":null,"regenerateCert":true,"regenerateWebCert":true,"regenerateWebRsa":true,"secretName":null,"webCertDuration":null,"webCrt":null,"webKey":null,"webRsaDuration":null,"webSecretName":null},"collector":{"affinity":{},"annotations":{},"config":{"exporters":{"otlp":{"endpoint":"stackgres-collector:4317","tls":{"ca_file":"/etc/operator/certs/tls.crt"}},"prometheus":{"enable_open_metrics":false,"endpoint":"0.0.0.0:9464","metric_expiration":"5m","resource_to_telemetry_conversion":{"enabled":false},"send_timestamps":true,"tls":{"ca_file":"/etc/operator/certs/tls.crt","cert_file":"/etc/operator/certs/tls.crt","key_file":"/etc/operator/certs/tls.key","reload_interval":"10m"}}},"processors":{"memory_limiter":{"check_interval":"1s","limit_percentage":80,"spike_limit_percentage":15}},"receivers":{"otlp":{"protocols":{"grpc":{"endpoint":"0.0.0.0:4317","tls":{"ca_file":"/etc/operator/certs/tls.crt","cert_file":"/etc/operator/certs/tls.crt","key_file":"/etc/operator/certs/tls.key"}}}}},"service":{"extensions":[],"pipelines":{"metrics":{"exporters":["prometheus"],"processors":["memory_limiter"],"receivers":["prometheus"]}}}},"name":"stackgres-collector","nodeSelector":{},"ports":[{"containerPort":9464,"name":"prom-http","protocol":"TCP"}],"prometheusOperator":{"allowDiscovery":true,"monitors":null},"receivers":{"deployments":null,"enabled":false,"exporters":1},"resources":{"limits":{"cpu":"1","memory":"4Gi"},"requests":{"cpu":"250m","memory":"1Gi"}},"service":{"annotations":{},"spec":{"ports":[{"name":"prom-http","port":9464,"protocol":"TCP","targetPort":"prom-http"}],"type":"ClusterIP"}},"serviceAccount":{"annotations":{}},"tolerations":[],"volumeMounts":[],"volumes":[]},"containerRegistry":"quay.io","deploy":{"collector":true,"operator":true,"restapi":true},"developer":{"allowPullExtensionsFromImageRepository":false,"disableArbitraryUser":false,"enableJvmDebug":false,"enableJvmDebugSuspend":false,"externalOperatorIp":null,"externalOperatorPort":null,"externalRestApiIp":null,"externalRestApiPort":null,"logLevel":null,"patches":{"adminui":{"volumeMounts":[],"volumes":[]},"clusterController":{"volumeMounts":[],"volumes":[]},"jobs":{"volumeMounts":[],"volumes":[]},"operator":{"volumeMounts":[],"volumes":[]},"restapi":{"volumeMounts":[],"volumes":[]},"stream":{"volumeMounts":[],"volumes":[]}},"showDebug":false,"showStackTraces":false,"version":null},"disableClusterRole":null,"disableCrdsAndWebhooksUpdate":null,"extensions":{"cache":{"enabled":false,"hostPath":null,"persistentVolume":{"size":"1Gi","storageClass":null},"preloadedExtensions":["x86_64/linux/timescaledb-1\\.7\\.4-pg12"]},"repositoryUrls":["https://extensions.stackgres.io/postgres/repository"]},"grafana":{"autoEmbed":false,"dashboardConfigMap":null,"datasourceName":"Prometheus","password":"prom-operator","schema":"http","secretName":null,"secretNamespace":null,"secretPasswordKey":null,"secretUserKey":null,"token":null,"urls":null,"user":"admin","webHost":null},"imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"jobs":{"affinity":{},"annotations":{},"image":{"name":"stackgres/jobs","pullPolicy":"IfNotPresent","tag":"1.17.2"},"nodeSelector":{},"resources":{},"tolerations":[]},"operator":{"affinity":{},"annotations":{},"image":{"name":"stackgres/operator","pullPolicy":"IfNotPresent","tag":"1.17.2"},"nodeSelector":{},"resources":{},"service":{"annotations":{}},"serviceAccount":{"annotations":{},"repoCredentials":[]},"tolerations":[]},"prometheus":null,"rbac":{"create":true},"restapi":{"affinity":{},"annotations":{},"image":{"name":"stackgres/restapi","pullPolicy":"IfNotPresent","tag":"1.17.2"},"name":"stackgres-restapi","nodeSelector":{},"resources":{},"service":{"annotations":{}},"serviceAccount":{"annotations":{},"repoCredentials":[]},"tolerations":[]},"serviceAccount":{"annotations":{},"create":true,"repoCredentials":[]},"sgConfigNamespace":null,"shardingSphere":null}
            - name: INSTALL_CRDS
              value: "true"
            - name: WAIT_CRDS_UPGRADE
              value: "false"
            - name: INSTALL_WEBHOOKS
              value: "true"
            - name: INSTALL_CONVERSION_WEBHOOKS
              value: "true"
            - name: ALLOWED_NAMESPACES
              value: ""
            - name: CLUSTER_ROLE_DISABLED
              value: "false"
            - name: INSTALL_CERTS
              value: "true"
            - name: SGCONFIG_NAMESPACE
              value: stackgres
            - name: PROMETHEUS_AUTOBIND
              value: "true"
            - name: OPERATOR_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: OPERATOR_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OPERATOR_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SG_CONTAINER_REGISTRY
              value: quay.io
            - name: SG_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: EXTENSIONS_REPOSITORY_URLS
              value: https://extensions.stackgres.io/postgres/repository
          image: quay.io/stackgres/operator:1.17.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 10
          name: stackgres
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 2
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /etc/operator/certs
              name: operator-certs
              readOnly: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: stackgres
      volumes:
        - name: operator-certs
          secret:
            optional: true
            secretName: stackgres-certs
