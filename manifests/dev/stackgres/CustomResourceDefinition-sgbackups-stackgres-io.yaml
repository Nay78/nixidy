apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgbackups.stackgres.io
spec:
  group: stackgres.io
  names:
    kind: SGBackup
    listKind: SGBackupList
    plural: sgbackups
    shortNames:
      - sgbkp
    singular: sgbackup
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.sgCluster
          name: cluster
          type: string
        - jsonPath: .spec.managedLifecycle
          name: managed
          type: string
        - jsonPath: .status.process.status
          name: status
          type: string
        - jsonPath: .status.backupInformation.postgresVersion
          name: pg-version
          priority: 1
          type: string
        - format: byte
          jsonPath: .status.backupInformation.size.compressed
          name: compressed-size
          priority: 1
          type: integer
        - jsonPath: .status.backupInformation.timeline
          name: timeline
          priority: 1
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: |
            A manual or automatically generated backup of an SGCluster configured with backups.

            When a SGBackup is created a Job will perform a full backup of the database and update the status of the SGBackup
             with the all the information required to restore it and some stats (or a failure message in case something unexpected
             happened).
            Backup generated by SGBackup are stored in the object storage configured with an SGObjectStorage together with the WAL
             files or in a [VolumeSnapshot](https://kubernetes.io/docs/concepts/storage/volume-snapshots/) (separated from the WAL files that will be still stored in an object storage)
             depending on the backup configuration of the targeted SGCluster.
            After an SGBackup is created the same Job performs a reconciliation of the backups by applying the retention window
             that has been configured in the SGCluster and removing the backups with managed lifecycle and the WAL files older
             than the ones that fit in the retention window. The reconciliation also removes backups (excluding WAL files) that do
             not belongs to any SGBackup (including copies). If the target storage is changed deletion of an SGBackup backups with
             managed lifecycle and the WAL files older than the ones that fit in the retention window and of backups that do not
             belongs to any SGBackup will not be performed anymore on the previous storage, only on the new target storage.
            If the reconciliation of backups fails the backup itself do not fail and will be re-tried the next time a SGBackup
             or shecduled backup Job take place.
          properties:
            metadata:
              properties:
                name:
                  description: |
                    Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres backups in the same namespace.
                  maxLength: 56
                  pattern: ^[a-z]([-a-z0-9]*[a-z0-9])?$
                  type: string
              type: object
            spec:
              properties:
                managedLifecycle:
                  description: |
                    Indicate if this backup is not permanent and should be removed by the automated
                     retention policy. Default is `false`.
                  type: boolean
                maxRetries:
                  description: |
                    The maximum number of retries the backup operation is allowed to do after a failure.

                    A value of `0` (zero) means no retries are made. Defaults to: `3`.
                  type: integer
                reconciliationTimeout:
                  default: 300
                  description: |
                    Allow to set a timeout for the reconciliation process that take place after the backup.

                    If not set defaults to 300 (5 minutes). If set to 0 it will disable timeout.

                    Failure of reconciliation will not make the backup fail and will be re-tried the next time a SGBackup
                     or shecduled backup Job take place.
                  type: integer
                sgCluster:
                  description: |
                    The name of the `SGCluster` from which this backup is/will be taken.

                    If this is a copy of an existing completed backup in a different namespace
                     the value must be prefixed with the namespace of the source backup and a
                     dot `.` (e.g. `<cluster namespace>.<cluster name>`) or have the same value
                     if the source backup is also a copy.
                  type: string
                timeout:
                  description: |
                    Allow to set a timeout for the backup creation.

                    If not set it will be disabled and the backup operation will continue until the backup completes or fail. If set to 0 is the same as not being set.

                    Make sure to set a reasonable high value in order to allow for any unexpected delays during backup creation (network low bandwidth, disk low throughput and so forth).
                  type: integer
              type: object
            status:
              properties:
                backupInformation:
                  properties:
                    controlData:
                      description: |
                        An object containing data from the output of pg_controldata on the backup.
                      properties:
                        Backup end location:
                          type: string
                        Backup start location:
                          type: string
                        Blocks per segment of large relation:
                          type: string
                        Bytes per WAL segment:
                          type: string
                        Catalog version number:
                          type: string
                        Data page checksum version:
                          type: string
                        Database block size:
                          type: string
                        Database cluster state:
                          type: string
                        Database system identifier:
                          type: string
                        Date/time type storage:
                          type: string
                        End-of-backup record required:
                          type: string
                        Fake LSN counter for unlogged rels:
                          type: string
                        Float4 argument passing:
                          type: string
                        Float8 argument passing:
                          type: string
                        Latest checkpoint location:
                          type: string
                        Latest checkpoint's NextMultiOffset:
                          type: string
                        Latest checkpoint's NextMultiXactId:
                          type: string
                        Latest checkpoint's NextOID:
                          type: string
                        Latest checkpoint's NextXID:
                          type: string
                        Latest checkpoint's PrevTimeLineID:
                          type: string
                        Latest checkpoint's REDO WAL file:
                          type: string
                        Latest checkpoint's REDO location:
                          type: string
                        Latest checkpoint's TimeLineID:
                          type: string
                        Latest checkpoint's full_page_writes:
                          type: string
                        Latest checkpoint's newestCommitTsXid:
                          type: string
                        Latest checkpoint's oldestActiveXID:
                          type: string
                        Latest checkpoint's oldestCommitTsXid:
                          type: string
                        Latest checkpoint's oldestMulti's DB:
                          type: string
                        Latest checkpoint's oldestMultiXid:
                          type: string
                        Latest checkpoint's oldestXID:
                          type: string
                        Latest checkpoint's oldestXID's DB:
                          type: string
                        Maximum columns in an index:
                          type: string
                        Maximum data alignment:
                          type: string
                        Maximum length of identifiers:
                          type: string
                        Maximum size of a TOAST chunk:
                          type: string
                        Min recovery ending loc's timeline:
                          type: string
                        Minimum recovery ending location:
                          type: string
                        Mock authentication nonce:
                          type: string
                        Size of a large-object chunk:
                          type: string
                        Time of latest checkpoint:
                          type: string
                        WAL block size:
                          type: string
                        max_connections setting:
                          type: string
                        max_locks_per_xact setting:
                          type: string
                        max_prepared_xacts setting:
                          type: string
                        max_wal_senders setting:
                          type: string
                        max_worker_processes setting:
                          type: string
                        pg_control last modified:
                          type: string
                        pg_control version number:
                          type: string
                        track_commit_timestamp setting:
                          type: string
                        wal_level setting:
                          type: string
                        wal_log_hints setting:
                          type: string
                      type: object
                    hostname:
                      description: |
                        Hostname of the instance where the backup is taken from.
                      type: string
                    lsn:
                      properties:
                        end:
                          description: |
                            LSN of when the backup finished.
                          type: string
                        start:
                          description: |
                            LSN of when the backup started.
                          type: string
                      type: object
                    pgData:
                      description: |
                        Data directory where the backup is taken from.
                      type: string
                    postgresVersion:
                      description: |
                        Postgres version of the server where the backup is taken from.
                      type: string
                    size:
                      properties:
                        compressed:
                          description: |
                            Size (in bytes) of the compressed backup.
                          format: int64
                          type: integer
                        uncompressed:
                          description: |
                            Size (in bytes) of the uncompressed backup.
                          format: int64
                          type: integer
                      type: object
                    sourcePod:
                      description: |
                        Pod where the backup is taken from.
                      type: string
                    startWalFile:
                      description: |
                        WAL segment file name when the backup was started.
                      type: string
                    systemIdentifier:
                      description: |
                        Postgres *system identifier* of the cluster this backup is taken from.
                      type: string
                    timeline:
                      description: |
                        Backup timeline.
                      type: string
                  type: object
                backupPath:
                  description: |
                    The path were the backup is stored.
                  type: string
                internalName:
                  description: |
                    The name of the backup.
                  type: string
                process:
                  properties:
                    failure:
                      description: |
                        If the status is `failed` this field will contain a message indicating the failure reason.
                      type: string
                    jobPod:
                      description: |
                        Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                      type: string
                    managedLifecycle:
                      description: |
                        Status (may be transient) until converging to `spec.managedLifecycle`.
                      type: boolean
                    status:
                      description: |
                        Status of the backup.
                      type: string
                    timing:
                      properties:
                        end:
                          description: |
                            End time of backup.
                          type: string
                        start:
                          description: |
                            Start time of backup.
                          type: string
                        stored:
                          description: |
                            Time at which the backup is safely stored in the object storage.
                          type: string
                      type: object
                  type: object
                sgBackupConfig:
                  description: The backup configuration used to perform this backup.
                  properties:
                    baseBackups:
                      description: |
                        Back backups configuration.
                      properties:
                        compression:
                          description: |
                            Select the backup compression algorithm. Possible options are: lz4, lzma, zstd, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                          enum:
                            - lz4
                            - lzma
                            - zstd
                            - brotli
                          type: string
                      type: object
                    storage:
                      description: |
                        Object Storage configuration
                      properties:
                        azureBlob:
                          description: |
                            Azure Blob Storage configuration.
                          properties:
                            azureCredentials:
                              description: |
                                The credentials to access Azure Blob Storage for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.33/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                                  properties:
                                    accessKey:
                                      description: |
                                        The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    storageAccount:
                                      description: |
                                        The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - storageAccount
                                    - accessKey
                                  type: object
                              type: object
                            bucket:
                              description: |
                                Azure Blob Storage bucket name.
                              pattern: ^(azure://)?[^/]+(/[^/]*)*$
                              type: string
                          required:
                            - bucket
                            - azureCredentials
                          type: object
                        encryption:
                          description: |
                            Section to configure object storage encryption of stored files.
                          properties:
                            method:
                              description: |
                                Select the storage encryption method.

                                Possible options are:

                                * `sodium`: will use libsodium to encrypt the files stored.
                                * `openpgp`: will use OpenPGP standard to encrypt the files stored.

                                When not set no encryption will be applied to stored files.
                              type: string
                            openpgp:
                              description: OpenPGP encryption configuration.
                              properties:
                                key:
                                  description: |
                                    To configure encryption and decryption with OpenPGP standard. You can join multiline
                                     key using `\n` symbols into one line (mostly used in case of daemontools and envdir).
                                  properties:
                                    key:
                                      description: The key of the secret to select from. Must be a valid secret key.
                                      type: string
                                    name:
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      type: string
                                  type: object
                                keyPassphrase:
                                  description: |
                                    If your private key is encrypted with a passphrase, you should set passphrase for decrypt.
                                  properties:
                                    key:
                                      description: The key of the secret to select from. Must be a valid secret key.
                                      type: string
                                    name:
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      type: string
                                  type: object
                              type: object
                            sodium:
                              description: libsodium encryption configuration.
                              properties:
                                key:
                                  description: |
                                    To configure encryption and decryption with libsodium an algorithm that only requires
                                     a secret key is used. libsodium keys are fixed-size keys of 32 bytes. For optimal
                                     cryptographic security, it is recommened to use a random 32 byte key. To generate a
                                     random key, you can something like `openssl rand -hex 32` (set `keyTransform` to `hex`)
                                     or `openssl rand -base64 32` (set `keyTransform` to `base64`).
                                  properties:
                                    key:
                                      description: The key of the secret to select from. Must be a valid secret key.
                                      type: string
                                    name:
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      type: string
                                  type: object
                                keyTransform:
                                  default: none
                                  description: |
                                    The transform that will be applied to the `key` to get the required 32 byte key.
                                     Supported transformations are `base64`, `hex` or `none` (default). The option
                                     none exists for backwards compatbility, the user input will be converted to 32
                                     byte either via truncation or by zero-padding.
                                  type: string
                              type: object
                          type: object
                        gcs:
                          description: |
                            Google Cloud Storage configuration.
                          properties:
                            bucket:
                              description: |
                                GCS bucket name.
                              pattern: ^(gs://)?[^/]+(/[^/]*)*$
                              type: string
                            gcpCredentials:
                              description: |
                                The credentials to access GCS for writing and reading.
                              properties:
                                fetchCredentialsFromMetadataService:
                                  description: |
                                    If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.

                                    This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                  type: boolean
                                secretKeySelectors:
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.33/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                  properties:
                                    serviceAccountJSON:
                                      description: |
                                        A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountJSON
                                  type: object
                              type: object
                          required:
                            - bucket
                            - gcpCredentials
                          type: object
                        s3:
                          description: |
                            Amazon Web Services S3 configuration.
                          properties:
                            awsCredentials:
                              description: |
                                The credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.33/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                                  properties:
                                    accessKeyId:
                                      description: |
                                        AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    secretAccessKey:
                                      description: |
                                        AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - accessKeyId
                                    - secretAccessKey
                                  type: object
                              required:
                                - secretKeySelectors
                              type: object
                            bucket:
                              description: |
                                AWS S3 bucket name.
                              pattern: ^((s3|https?)://)?[^/]+(/[^/]*)*$
                              type: string
                            region:
                              description: |
                                The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                              type: string
                            storageClass:
                              description: |
                                The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                              type: string
                          required:
                            - bucket
                            - awsCredentials
                          type: object
                        s3Compatible:
                          description: AWS S3-Compatible API configuration
                          properties:
                            awsCredentials:
                              description: |
                                The credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.33/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                                  properties:
                                    accessKeyId:
                                      description: |
                                        AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    caCertificate:
                                      description: |
                                        CA Certificate file to be used when connecting to the S3 Compatible Service.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    secretAccessKey:
                                      description: |
                                        AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - accessKeyId
                                    - secretAccessKey
                                  type: object
                              required:
                                - secretKeySelectors
                              type: object
                            bucket:
                              description: |
                                Bucket name.
                              pattern: ^((s3|https?)://)?[^/]+(/[^/]*)*$
                              type: string
                            enablePathStyleAddressing:
                              description: |
                                Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).

                                Defaults to false.
                              type: boolean
                            endpoint:
                              description: |
                                Overrides the default url to connect to an S3-compatible service.
                                For example: `http://s3-like-service:9000`.
                              type: string
                            region:
                              description: |
                                The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                              type: string
                            storageClass:
                              description: |
                                The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                              type: string
                          required:
                            - bucket
                            - awsCredentials
                          type: object
                        type:
                          description: |
                            Determine the type of object storage used for storing the base backups and WAL segments.
                                  Possible values:
                                  *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                                  *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                                  *  `gcs`: Google Cloud Storage.
                                  *  `azureBlob`: Microsoft Azure Blob Storage.
                          enum:
                            - s3
                            - s3Compatible
                            - gcs
                            - azureBlob
                          type: string
                      required:
                        - type
                      type: object
                  required:
                    - storage
                  type: object
                volumeSnapshot:
                  description: The volume snapshot configuration used to restore this backup.
                  properties:
                    backupLabel:
                      description: |
                        The content of `backup_label` column returned by `pg_backup_stop` encoded in Base64
                      type: string
                    name:
                      description: |
                        The volume snapshot used to store this backup.
                      type: string
                    tablespaceMap:
                      description: |
                        The content of `tablespace_map` column returned by `pg_backup_stop` encoded in Base64
                      type: string
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
