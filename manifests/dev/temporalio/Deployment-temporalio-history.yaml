apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: history
    app.kubernetes.io/instance: temporalio
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: temporal
    app.kubernetes.io/part-of: temporal
    app.kubernetes.io/version: 1.29.0
    helm.sh/chart: temporal-0.68.1
  name: temporalio-history
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: history
      app.kubernetes.io/instance: temporalio
      app.kubernetes.io/name: temporal
  template:
    metadata:
      annotations:
        checksum/config: 1d8d2722d1e5ff21daea696e44a1dd653d22be189c8072770f16d3e8398b0654
        prometheus.io/job: temporal-history
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: history
        app.kubernetes.io/instance: temporalio
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: temporal
        app.kubernetes.io/part-of: temporal
        app.kubernetes.io/version: 1.29.0
        helm.sh/chart: temporal-0.68.1
    spec:
      containers:
        - env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICES
              value: history
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: temporalio-default-store
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: temporalio-visibility-store
          image: temporalio/server:1.29.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 150
            tcpSocket:
              port: rpc
          name: temporal-history
          ports:
            - containerPort: 7234
              name: rpc
              protocol: TCP
            - containerPort: 6934
              name: membership
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /etc/temporal/config/config_template.yaml
              name: config
              subPath: config_template.yaml
            - mountPath: /etc/temporal/dynamic_config
              name: dynamic-config
      initContainers:
        - command:
            - sh
            - -c
            - until cqlsh temporalio-cassandra.temporal 9042 -e "SHOW VERSION"; do echo waiting for cassandra to start; sleep 1; done;
          image: cassandra:3.11.3
          imagePullPolicy: IfNotPresent
          name: check-cassandra
        - command:
            - sh
            - -c
            - until cqlsh temporalio-cassandra.temporal 9042 -e "SELECT keyspace_name FROM system_schema.keyspaces" | grep temporal$; do echo waiting for default keyspace to become ready; sleep 1; done;
          image: cassandra:3.11.3
          imagePullPolicy: IfNotPresent
          name: check-cassandra-temporal-schema
        - command:
            - sh
            - -c
            - until curl --silent --fail --user "$ES_USER:$ES_PWD" $ES_SCHEME://$ES_HOST:$ES_PORT/$ES_VISIBILITY_INDEX 2>&1 > /dev/null; do echo waiting for elasticsearch index to become ready; sleep 1; done;
          env:
            - name: ES_SCHEME
              value: http
            - name: ES_HOST
              value: elasticsearch-master-headless
            - name: ES_PORT
              value: "9200"
            - name: ES_USER
              value: elastic
            - name: ES_PWD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: temporalio-visibility-store
            - name: ES_VERSION
              value: v7
            - name: ES_VISIBILITY_INDEX
              value: temporal_visibility_v1_dev
          image: temporalio/admin-tools:1.29
          imagePullPolicy: IfNotPresent
          name: check-elasticsearch-index
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: default
      volumes:
        - configMap:
            name: temporalio-config
          name: config
        - configMap:
            items:
              - key: dynamic_config.yaml
                path: dynamic_config.yaml
            name: temporalio-dynamic-config
          name: dynamic-config
