apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    chart: airflow-1.18.0
    component: worker
    heritage: Helm
    release: airflow
    tier: airflow
  name: airflow-worker
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      component: worker
      release: airflow
      tier: airflow
  serviceName: airflow-worker
  template:
    metadata:
      annotations:
        checksum/airflow-config: b8e667859ce043af814865e77b74bc4ac2c433cb10d85d9a53775247c767f341
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        checksum/kerberos-keytab: 80979996aa3c1f48c95dfbe9bb27191e71f12442a08c0ed834413da9d430fd0e
        checksum/metadata-secret: 5cc8be84699acbbb1891e81712306f195c38559988791386f1b9410344fb01e6
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/result-backend-secret: 98a68f230007cfa8f5d3792e1aff843a76b0686409e4a46ab2f092f6865a1b71
        checksum/webserver-secret-key: 97ccb485bcb4d6b5d625617645f8cda75f82731afbd1fa58b643a3bd927c7026
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        component: worker
        release: airflow
        tier: airflow
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: worker
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - bash
            - -c
            - |-
              exec \
              airflow celery worker
          env:
            - name: DUMB_INIT_SETSID
              value: "0"
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__API__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: api-secret-key
                  name: airflow-api-secret-key
            - name: AIRFLOW__API_AUTH__JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt-secret
                  name: airflow-jwt-secret
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-broker-url
          envFrom: []
          image: apache/airflow:3.0.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - CONNECTION_CHECK_MAX_COUNT=0 exec /entrypoint python -m celery --app airflow.providers.celery.executors.celery_executor.app inspect ping -d celery@$(hostname)
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 20
          name: worker
          ports:
            - containerPort: 8793
              name: worker-logs
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/logs
              name: logs
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
        - args:
            - bash
            - /clean-logs
          env:
            - name: AIRFLOW__LOG_RETENTION_DAYS
              value: "15"
            - name: AIRFLOW__LOG_CLEANUP_FREQUENCY_MINUTES
              value: "15"
            - name: AIRFLOW_HOME
              value: /opt/airflow
          image: apache/airflow:3.0.2
          imagePullPolicy: IfNotPresent
          name: worker-log-groomer
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/logs
              name: logs
      initContainers:
        - args:
            - airflow
            - db
            - check-migrations
            - --migration-wait-timeout=60
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__API__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: api-secret-key
                  name: airflow-api-secret-key
            - name: AIRFLOW__API_AUTH__JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt-secret
                  name: airflow-jwt-secret
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-broker-url
          envFrom: []
          image: apache/airflow:3.0.2
          imagePullPolicy: IfNotPresent
          name: wait-for-airflow-migrations
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
      nodeSelector: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-worker
      terminationGracePeriodSeconds: 600
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-config
          name: config
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
