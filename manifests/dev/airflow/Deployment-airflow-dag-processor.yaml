apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    chart: airflow-1.18.0
    component: dag-processor
    heritage: Helm
    release: airflow
    tier: airflow
  name: airflow-dag-processor
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      component: dag-processor
      release: airflow
      tier: airflow
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 50%
  template:
    metadata:
      annotations:
        checksum/airflow-config: b8e667859ce043af814865e77b74bc4ac2c433cb10d85d9a53775247c767f341
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        checksum/metadata-secret: 5cc8be84699acbbb1891e81712306f195c38559988791386f1b9410344fb01e6
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        component: dag-processor
        release: airflow
        tier: airflow
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: dag-processor
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - bash
            - -c
            - exec airflow dag-processor
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__API__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: api-secret-key
                  name: airflow-api-secret-key
            - name: AIRFLOW__API_AUTH__JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt-secret
                  name: airflow-jwt-secret
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-broker-url
          envFrom: []
          image: apache/airflow:3.0.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
                  airflow jobs check --local --job-type DagProcessorJob
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 20
          name: dag-processor
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/logs
              name: logs
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
        - args:
            - bash
            - /clean-logs
          env:
            - name: AIRFLOW__LOG_RETENTION_DAYS
              value: "15"
            - name: AIRFLOW__LOG_CLEANUP_FREQUENCY_MINUTES
              value: "15"
            - name: AIRFLOW_HOME
              value: /opt/airflow
          image: apache/airflow:3.0.2
          imagePullPolicy: IfNotPresent
          name: dag-processor-log-groomer
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/logs
              name: logs
      initContainers:
        - args:
            - airflow
            - db
            - check-migrations
            - --migration-wait-timeout=60
          env:
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  key: fernet-key
                  name: airflow-fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-metadata
            - name: AIRFLOW__API__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: api-secret-key
                  name: airflow-api-secret-key
            - name: AIRFLOW__API_AUTH__JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: jwt-secret
                  name: airflow-jwt-secret
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: connection
                  name: airflow-broker-url
          envFrom: []
          image: apache/airflow:3.0.2
          imagePullPolicy: IfNotPresent
          name: wait-for-airflow-migrations
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /opt/airflow/airflow.cfg
              name: config
              readOnly: true
              subPath: airflow.cfg
            - mountPath: /opt/airflow/config/airflow_local_settings.py
              name: config
              readOnly: true
              subPath: airflow_local_settings.py
      nodeSelector: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccountName: airflow-dag-processor
      terminationGracePeriodSeconds: 60
      tolerations: []
      topologySpreadConstraints: []
      volumes:
        - configMap:
            name: airflow-config
          name: config
        - emptyDir: {}
          name: logs
